language: java
# Cache our Gcloud SDK between commands
cache:
  directories:
  - "$HOME/google-cloud-sdk/"
env:
# Make sure gcloud command is on our PATH and the App Engine SDK is in the Python path
#- GAE_PYTHONPATH=${HOME}/.cache/google_appengine PATH=$PATH:${HOME}/google-cloud-sdk/bin PYTHONPATH=${PYTHONPATH}:${GAE_PYTHONPATH} CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
#- rm -rf /home/travis/google-cloud-sdk
# Add the Cloud SDK distribution URI as a package source:
- echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
# Make sure you have apt-transport-https installed:
- sudo apt-get install apt-transport-https ca-certificates gnupg
# Import the Google Cloud public key:
- curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
# Update and install the Cloud SDK:
- sudo apt-get update && sudo apt-get install google-cloud-sdk


#- mkdir -p lib
# Here we use the decrypted service account credentials to authenticate the command line tool
# [AUTH]
#- echo $HOME
#- echo $PATH
#- ls /home/travis
#- ls /home/travis/.cache
#- ls /home/travis/google-cloud-sdk
#- ls ${HOME}/google-cloud-sdk/bin
- gcloud auth activate-service-account --key-file client-secret.json
# [END auth] 
install:
#not sure about this
# Optionally, install any of these additional components:
#- gcloud components install app-engine-java
- sudo apt-get install google-cloud-sdk-app-engine-java
- gcloud config set project good-punts
script:
#- mvn install
- cd gp-gae-app
- ls
- mvn appengine:deploy -Dapp.deploy.projectId=good-punts
#- mvn gcloud:deploy