language: java
# Cache our Gcloud SDK between commands
cache:
  directories:
  - "$HOME/google-cloud-sdk/"
env:
# Make sure gcloud command is on our PATH and the App Engine SDK is in the Python path
- GAE_PYTHONPATH=${HOME}/.cache/google_appengine PATH=$PATH:${HOME}/google-cloud-sdk/bin PYTHONPATH=${PYTHONPATH}:${GAE_PYTHONPATH} CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
- rm -rf /home/travis/google-cloud-sdk
- rm -rf ${GAE_PYTHONPATH}
# Install Google App Engine Python SDKSs
#- if [ ! -d "${GAE_PYTHONPATH}" ]; then
- python install/scripts/fetch_gae_sdk.py $(dirname "${GAE_PYTHONPATH}");
#  fi
# [START auth]
# Decrypt the credentials we added to the repo using the key we added with the Travis command line tool
#- openssl aes-256-cbc -K $encrypted_45d1b36fa803_key -iv $encrypted_45d1b36fa803_iv -in credentials.tar.gz.enc -out credentials.tar.gz -d
# If the SDK is not already cached, download it and unpack it
- if [ ! -d ${HOME}/google-cloud-sdk ]; then
     curl https://sdk.cloud.google.com | bash;
  fi
#- tar -xzf credentials.tar.gz
- mkdir -p lib
# Here we use the decrypted service account credentials to authenticate the command line tool
- echo $HOME
- echo $PATH
- ls /home/travis
- ls /home/travis/.cache
- ls /home/travis/google-cloud-sdk
- ls ${HOME}/google-cloud-sdk/bin
- gcloud auth activate-service-account --key-file client-secret.json
# [END auth]
install:
#not sure about this
- gcloud components install app-engine-java
- gcloud config set project good-punts
script:
- mvn install
- cd gp-gae-app
- mvn appengine:deploy
#- mvn gcloud:deploy